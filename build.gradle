plugins {
    id 'java'
    id 'war'
    id "io.freefair.lombok" version "6.5.1"
}

group = 'ru.clevertec'
version = '1.0-SNAPSHOT'

ext {
    junitVersion = '5.10.0'
    mockitoVersion = '5.6.0'
    mapstructVersion = '1.5.3.Final'
    jacksonVersion = '2.15.2'
    springVersion = '6.1.2'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.testcontainers:postgresql:1.17.6'
    testImplementation("org.mapstruct:mapstruct:${mapstructVersion}")
    testAnnotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
    testImplementation("org.springframework:spring-test:${springVersion}")

    implementation("org.mapstruct:mapstruct:${mapstructVersion}")
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    runtimeOnly 'org.postgresql:postgresql:42.6.0'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'org.liquibase:liquibase-core:4.23.1'

    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0-M1'

    implementation("org.springframework:spring-context:${springVersion}")
    implementation("org.springframework:spring-jdbc:${springVersion}")
    implementation("org.springframework:spring-webmvc:${springVersion}")
    implementation("org.springframework:spring-orm:${springVersion}")

    implementation 'org.hibernate:hibernate-core:6.0.0.Final'

    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}")

    compileJava {
        options.compilerArgs = [
                '-Amapstruct.defaultComponentModel=spring'
        ]
    }
}

test {
    useJUnitPlatform()
}